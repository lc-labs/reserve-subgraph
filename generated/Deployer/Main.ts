// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AssetRegistrySet extends ethereum.Event {
  get params(): AssetRegistrySet__Params {
    return new AssetRegistrySet__Params(this);
  }
}

export class AssetRegistrySet__Params {
  _event: AssetRegistrySet;

  constructor(event: AssetRegistrySet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BackingManagerSet extends ethereum.Event {
  get params(): BackingManagerSet__Params {
    return new BackingManagerSet__Params(this);
  }
}

export class BackingManagerSet__Params {
  _event: BackingManagerSet;

  constructor(event: BackingManagerSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BasketHandlerSet extends ethereum.Event {
  get params(): BasketHandlerSet__Params {
    return new BasketHandlerSet__Params(this);
  }
}

export class BasketHandlerSet__Params {
  _event: BasketHandlerSet;

  constructor(event: BasketHandlerSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BrokerSet extends ethereum.Event {
  get params(): BrokerSet__Params {
    return new BrokerSet__Params(this);
  }
}

export class BrokerSet__Params {
  _event: BrokerSet;

  constructor(event: BrokerSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DistributorSet extends ethereum.Event {
  get params(): DistributorSet__Params {
    return new DistributorSet__Params(this);
  }
}

export class DistributorSet__Params {
  _event: DistributorSet;

  constructor(event: DistributorSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FurnaceSet extends ethereum.Event {
  get params(): FurnaceSet__Params {
    return new FurnaceSet__Params(this);
  }
}

export class FurnaceSet__Params {
  _event: FurnaceSet;

  constructor(event: FurnaceSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PausedSet extends ethereum.Event {
  get params(): PausedSet__Params {
    return new PausedSet__Params(this);
  }
}

export class PausedSet__Params {
  _event: PausedSet;

  constructor(event: PausedSet) {
    this._event = event;
  }

  get oldPaused(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get newPaused(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class PauserSet extends ethereum.Event {
  get params(): PauserSet__Params {
    return new PauserSet__Params(this);
  }
}

export class PauserSet__Params {
  _event: PauserSet;

  constructor(event: PauserSet) {
    this._event = event;
  }

  get oldPauser(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPauser(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RSRSet extends ethereum.Event {
  get params(): RSRSet__Params {
    return new RSRSet__Params(this);
  }
}

export class RSRSet__Params {
  _event: RSRSet;

  constructor(event: RSRSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RSRTraderSet extends ethereum.Event {
  get params(): RSRTraderSet__Params {
    return new RSRTraderSet__Params(this);
  }
}

export class RSRTraderSet__Params {
  _event: RSRTraderSet;

  constructor(event: RSRTraderSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RTokenSet extends ethereum.Event {
  get params(): RTokenSet__Params {
    return new RTokenSet__Params(this);
  }
}

export class RTokenSet__Params {
  _event: RTokenSet;

  constructor(event: RTokenSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RTokenTraderSet extends ethereum.Event {
  get params(): RTokenTraderSet__Params {
    return new RTokenTraderSet__Params(this);
  }
}

export class RTokenTraderSet__Params {
  _event: RTokenTraderSet;

  constructor(event: RTokenTraderSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StRSRSet extends ethereum.Event {
  get params(): StRSRSet__Params {
    return new StRSRSet__Params(this);
  }
}

export class StRSRSet__Params {
  _event: StRSRSet;

  constructor(event: StRSRSet) {
    this._event = event;
  }

  get oldVal(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVal(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Main extends ethereum.SmartContract {
  static bind(address: Address): Main {
    return new Main("Main", address);
  }

  assetRegistry(): Address {
    let result = super.call("assetRegistry", "assetRegistry():(address)", []);

    return result[0].toAddress();
  }

  try_assetRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "assetRegistry",
      "assetRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  backingManager(): Address {
    let result = super.call("backingManager", "backingManager():(address)", []);

    return result[0].toAddress();
  }

  try_backingManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "backingManager",
      "backingManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  basketHandler(): Address {
    let result = super.call("basketHandler", "basketHandler():(address)", []);

    return result[0].toAddress();
  }

  try_basketHandler(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "basketHandler",
      "basketHandler():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  broker(): Address {
    let result = super.call("broker", "broker():(address)", []);

    return result[0].toAddress();
  }

  try_broker(): ethereum.CallResult<Address> {
    let result = super.tryCall("broker", "broker():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  distributor(): Address {
    let result = super.call("distributor", "distributor():(address)", []);

    return result[0].toAddress();
  }

  try_distributor(): ethereum.CallResult<Address> {
    let result = super.tryCall("distributor", "distributor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  furnace(): Address {
    let result = super.call("furnace", "furnace():(address)", []);

    return result[0].toAddress();
  }

  try_furnace(): ethereum.CallResult<Address> {
    let result = super.tryCall("furnace", "furnace():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  pauser(): Address {
    let result = super.call("pauser", "pauser():(address)", []);

    return result[0].toAddress();
  }

  try_pauser(): ethereum.CallResult<Address> {
    let result = super.tryCall("pauser", "pauser():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rToken(): Address {
    let result = super.call("rToken", "rToken():(address)", []);

    return result[0].toAddress();
  }

  try_rToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("rToken", "rToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rTokenTrader(): Address {
    let result = super.call("rTokenTrader", "rTokenTrader():(address)", []);

    return result[0].toAddress();
  }

  try_rTokenTrader(): ethereum.CallResult<Address> {
    let result = super.tryCall("rTokenTrader", "rTokenTrader():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rsr(): Address {
    let result = super.call("rsr", "rsr():(address)", []);

    return result[0].toAddress();
  }

  try_rsr(): ethereum.CallResult<Address> {
    let result = super.tryCall("rsr", "rsr():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rsrTrader(): Address {
    let result = super.call("rsrTrader", "rsrTrader():(address)", []);

    return result[0].toAddress();
  }

  try_rsrTrader(): ethereum.CallResult<Address> {
    let result = super.tryCall("rsrTrader", "rsrTrader():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stRSR(): Address {
    let result = super.call("stRSR", "stRSR():(address)", []);

    return result[0].toAddress();
  }

  try_stRSR(): ethereum.CallResult<Address> {
    let result = super.tryCall("stRSR", "stRSR():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }

  get args(): InitCallArgsStruct {
    return changetype<InitCallArgsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class InitCallArgsStruct extends ethereum.Tuple {
  get params(): InitCallArgsParamsStruct {
    return changetype<InitCallArgsParamsStruct>(this[0].toTuple());
  }

  get components(): InitCallArgsComponentsStruct {
    return changetype<InitCallArgsComponentsStruct>(this[1].toTuple());
  }

  get rsr(): Address {
    return this[2].toAddress();
  }

  get gnosis(): Address {
    return this[3].toAddress();
  }

  get assets(): Array<Address> {
    return this[4].toAddressArray();
  }
}

export class InitCallArgsParamsStruct extends ethereum.Tuple {
  get maxAuctionSize(): BigInt {
    return this[0].toBigInt();
  }

  get dist(): InitCallArgsParamsDistStruct {
    return changetype<InitCallArgsParamsDistStruct>(this[1].toTuple());
  }

  get rewardPeriod(): BigInt {
    return this[2].toBigInt();
  }

  get rewardRatio(): BigInt {
    return this[3].toBigInt();
  }

  get unstakingDelay(): BigInt {
    return this[4].toBigInt();
  }

  get tradingDelay(): BigInt {
    return this[5].toBigInt();
  }

  get auctionLength(): BigInt {
    return this[6].toBigInt();
  }

  get backingBuffer(): BigInt {
    return this[7].toBigInt();
  }

  get maxTradeSlippage(): BigInt {
    return this[8].toBigInt();
  }

  get dustAmount(): BigInt {
    return this[9].toBigInt();
  }

  get issuanceRate(): BigInt {
    return this[10].toBigInt();
  }
}

export class InitCallArgsParamsDistStruct extends ethereum.Tuple {
  get rTokenDist(): i32 {
    return this[0].toI32();
  }

  get rsrDist(): i32 {
    return this[1].toI32();
  }
}

export class InitCallArgsComponentsStruct extends ethereum.Tuple {
  get rToken(): Address {
    return this[0].toAddress();
  }

  get stRSR(): Address {
    return this[1].toAddress();
  }

  get assetRegistry(): Address {
    return this[2].toAddress();
  }

  get basketHandler(): Address {
    return this[3].toAddress();
  }

  get backingManager(): Address {
    return this[4].toAddress();
  }

  get distributor(): Address {
    return this[5].toAddress();
  }

  get furnace(): Address {
    return this[6].toAddress();
  }

  get broker(): Address {
    return this[7].toAddress();
  }

  get rsrTrader(): Address {
    return this[8].toAddress();
  }

  get rTokenTrader(): Address {
    return this[9].toAddress();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PokeCall extends ethereum.Call {
  get inputs(): PokeCall__Inputs {
    return new PokeCall__Inputs(this);
  }

  get outputs(): PokeCall__Outputs {
    return new PokeCall__Outputs(this);
  }
}

export class PokeCall__Inputs {
  _call: PokeCall;

  constructor(call: PokeCall) {
    this._call = call;
  }
}

export class PokeCall__Outputs {
  _call: PokeCall;

  constructor(call: PokeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAssetRegistryCall extends ethereum.Call {
  get inputs(): SetAssetRegistryCall__Inputs {
    return new SetAssetRegistryCall__Inputs(this);
  }

  get outputs(): SetAssetRegistryCall__Outputs {
    return new SetAssetRegistryCall__Outputs(this);
  }
}

export class SetAssetRegistryCall__Inputs {
  _call: SetAssetRegistryCall;

  constructor(call: SetAssetRegistryCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAssetRegistryCall__Outputs {
  _call: SetAssetRegistryCall;

  constructor(call: SetAssetRegistryCall) {
    this._call = call;
  }
}

export class SetBackingManagerCall extends ethereum.Call {
  get inputs(): SetBackingManagerCall__Inputs {
    return new SetBackingManagerCall__Inputs(this);
  }

  get outputs(): SetBackingManagerCall__Outputs {
    return new SetBackingManagerCall__Outputs(this);
  }
}

export class SetBackingManagerCall__Inputs {
  _call: SetBackingManagerCall;

  constructor(call: SetBackingManagerCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBackingManagerCall__Outputs {
  _call: SetBackingManagerCall;

  constructor(call: SetBackingManagerCall) {
    this._call = call;
  }
}

export class SetBasketHandlerCall extends ethereum.Call {
  get inputs(): SetBasketHandlerCall__Inputs {
    return new SetBasketHandlerCall__Inputs(this);
  }

  get outputs(): SetBasketHandlerCall__Outputs {
    return new SetBasketHandlerCall__Outputs(this);
  }
}

export class SetBasketHandlerCall__Inputs {
  _call: SetBasketHandlerCall;

  constructor(call: SetBasketHandlerCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBasketHandlerCall__Outputs {
  _call: SetBasketHandlerCall;

  constructor(call: SetBasketHandlerCall) {
    this._call = call;
  }
}

export class SetBrokerCall extends ethereum.Call {
  get inputs(): SetBrokerCall__Inputs {
    return new SetBrokerCall__Inputs(this);
  }

  get outputs(): SetBrokerCall__Outputs {
    return new SetBrokerCall__Outputs(this);
  }
}

export class SetBrokerCall__Inputs {
  _call: SetBrokerCall;

  constructor(call: SetBrokerCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBrokerCall__Outputs {
  _call: SetBrokerCall;

  constructor(call: SetBrokerCall) {
    this._call = call;
  }
}

export class SetDistributorCall extends ethereum.Call {
  get inputs(): SetDistributorCall__Inputs {
    return new SetDistributorCall__Inputs(this);
  }

  get outputs(): SetDistributorCall__Outputs {
    return new SetDistributorCall__Outputs(this);
  }
}

export class SetDistributorCall__Inputs {
  _call: SetDistributorCall;

  constructor(call: SetDistributorCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetDistributorCall__Outputs {
  _call: SetDistributorCall;

  constructor(call: SetDistributorCall) {
    this._call = call;
  }
}

export class SetFurnaceCall extends ethereum.Call {
  get inputs(): SetFurnaceCall__Inputs {
    return new SetFurnaceCall__Inputs(this);
  }

  get outputs(): SetFurnaceCall__Outputs {
    return new SetFurnaceCall__Outputs(this);
  }
}

export class SetFurnaceCall__Inputs {
  _call: SetFurnaceCall;

  constructor(call: SetFurnaceCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFurnaceCall__Outputs {
  _call: SetFurnaceCall;

  constructor(call: SetFurnaceCall) {
    this._call = call;
  }
}

export class SetPauserCall extends ethereum.Call {
  get inputs(): SetPauserCall__Inputs {
    return new SetPauserCall__Inputs(this);
  }

  get outputs(): SetPauserCall__Outputs {
    return new SetPauserCall__Outputs(this);
  }
}

export class SetPauserCall__Inputs {
  _call: SetPauserCall;

  constructor(call: SetPauserCall) {
    this._call = call;
  }

  get pauser_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPauserCall__Outputs {
  _call: SetPauserCall;

  constructor(call: SetPauserCall) {
    this._call = call;
  }
}

export class SetRSRCall extends ethereum.Call {
  get inputs(): SetRSRCall__Inputs {
    return new SetRSRCall__Inputs(this);
  }

  get outputs(): SetRSRCall__Outputs {
    return new SetRSRCall__Outputs(this);
  }
}

export class SetRSRCall__Inputs {
  _call: SetRSRCall;

  constructor(call: SetRSRCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRSRCall__Outputs {
  _call: SetRSRCall;

  constructor(call: SetRSRCall) {
    this._call = call;
  }
}

export class SetRSRTraderCall extends ethereum.Call {
  get inputs(): SetRSRTraderCall__Inputs {
    return new SetRSRTraderCall__Inputs(this);
  }

  get outputs(): SetRSRTraderCall__Outputs {
    return new SetRSRTraderCall__Outputs(this);
  }
}

export class SetRSRTraderCall__Inputs {
  _call: SetRSRTraderCall;

  constructor(call: SetRSRTraderCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRSRTraderCall__Outputs {
  _call: SetRSRTraderCall;

  constructor(call: SetRSRTraderCall) {
    this._call = call;
  }
}

export class SetRTokenCall extends ethereum.Call {
  get inputs(): SetRTokenCall__Inputs {
    return new SetRTokenCall__Inputs(this);
  }

  get outputs(): SetRTokenCall__Outputs {
    return new SetRTokenCall__Outputs(this);
  }
}

export class SetRTokenCall__Inputs {
  _call: SetRTokenCall;

  constructor(call: SetRTokenCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRTokenCall__Outputs {
  _call: SetRTokenCall;

  constructor(call: SetRTokenCall) {
    this._call = call;
  }
}

export class SetRTokenTraderCall extends ethereum.Call {
  get inputs(): SetRTokenTraderCall__Inputs {
    return new SetRTokenTraderCall__Inputs(this);
  }

  get outputs(): SetRTokenTraderCall__Outputs {
    return new SetRTokenTraderCall__Outputs(this);
  }
}

export class SetRTokenTraderCall__Inputs {
  _call: SetRTokenTraderCall;

  constructor(call: SetRTokenTraderCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRTokenTraderCall__Outputs {
  _call: SetRTokenTraderCall;

  constructor(call: SetRTokenTraderCall) {
    this._call = call;
  }
}

export class SetStRSRCall extends ethereum.Call {
  get inputs(): SetStRSRCall__Inputs {
    return new SetStRSRCall__Inputs(this);
  }

  get outputs(): SetStRSRCall__Outputs {
    return new SetStRSRCall__Outputs(this);
  }
}

export class SetStRSRCall__Inputs {
  _call: SetStRSRCall;

  constructor(call: SetStRSRCall) {
    this._call = call;
  }

  get val(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStRSRCall__Outputs {
  _call: SetStRSRCall;

  constructor(call: SetStRSRCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
